(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{436:function(s,e,t){"use strict";t.r(e);var v=t(27),_=Object(v.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-学习规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-学习规划"}},[s._v("#")]),s._v(" 1. 学习规划")]),s._v(" "),t("h3",{attrs:{id:"_1-1-源码学习目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-源码学习目录"}},[s._v("#")]),s._v(" 1.1 源码学习目录")]),s._v(" "),t("p",[s._v("本项目所剖析的"),t("code",[s._v("Vue.js")]),s._v("源码版本是目前最新的版本，版本号为 v2.6.11 ，其代码目录如下：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("├─dist                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目构建后的文件")]),s._v("\n├─scripts                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与项目构建相关的脚本和配置文件")]),s._v("\n├─flow                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# flow的类型声明文件")]),s._v("\n├─src                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目源代码")]),s._v("\n│    ├─complier          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与模板编译相关的代码")]),s._v("\n│    ├─core              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通用的、与运行平台无关的运行时代码")]),s._v("\n│    │  ├─observe        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 实现变化侦测的代码")]),s._v("\n│    │  ├─vdom           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 实现virtual dom的代码")]),s._v("\n│    │  ├─instance       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Vue.js实例的构造函数和原型方法")]),s._v("\n│    │  ├─global-api     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全局api的代码")]),s._v("\n│    │  └─components     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内置组件的代码")]),s._v("\n│    ├─server            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与服务端渲染相关的代码")]),s._v("\n│    ├─platforms         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 特定运行平台的代码，如weex")]),s._v("\n│    ├─sfc               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单文件组件的解析代码")]),s._v("\n│    └─shared            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目公用的工具代码")]),s._v("\n└─test                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目测试代码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("从上面的目录结构可以看出，"),t("code",[s._v("Vue")]),s._v("的整个项目包含了类型检测相关、单元测试相关、与平台无关的核心代码以及跨平台运行的相关代码。")]),s._v(" "),t("p",[s._v("由于我们只是学习"),t("code",[s._v("Vue.js")]),s._v("的设计思想以及代码实现的相关逻辑，所以我们暂不去关心类型检测、单元测试以及特定平台运行等相关逻辑实现，仅关注它的核心代码，即"),t("code",[s._v("src/core")]),s._v("和"),t("code",[s._v("src/complier")]),s._v("这两个目录下的代码，并且接下来后续的学习也都是只在这两个目录的范围之内。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-学习路线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-学习路线"}},[s._v("#")]),s._v(" 1.2 学习路线")]),s._v(" "),t("p",[s._v("在学习之前，我们需要先制定一个学习路线，循序渐进的学习，这样不至于一头雾水，无处下手。后面的学习路线如下：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("变化侦测篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中如何实现数据的响应式系统，从而达到数据驱动视图。")])]),s._v(" "),t("li",[t("p",[s._v("虚拟 DOM 篇")]),s._v(" "),t("p",[s._v("学习什么是虚拟 DOM，以及"),t("code",[s._v("Vue")]),s._v("中的"),t("code",[s._v("DOM-Diff")]),s._v("原理")])]),s._v(" "),t("li",[t("p",[s._v("模板编译篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("内部是怎么把"),t("code",[s._v("template")]),s._v("模板编译成虚拟"),t("code",[s._v("DOM")]),s._v(",从而渲染出真实"),t("code",[s._v("DOM")])])]),s._v(" "),t("li",[t("p",[s._v("实例方法篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中所有实例方法(即所有以"),t("code",[s._v("$")]),s._v("开头的方法)的实现原理")])]),s._v(" "),t("li",[t("p",[s._v("全局 API 篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中所有全局"),t("code",[s._v("API")]),s._v("的实现原理")])]),s._v(" "),t("li",[t("p",[s._v("生命周期篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中组件的生命周期实现原理")])]),s._v(" "),t("li",[t("p",[s._v("指令篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中所有指令的实现原理")])]),s._v(" "),t("li",[t("p",[s._v("过滤器篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中所有过滤器的实现原理")])]),s._v(" "),t("li",[t("p",[s._v("内置组件篇")]),s._v(" "),t("p",[s._v("学习"),t("code",[s._v("Vue")]),s._v("中内置组件的实现原理")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);